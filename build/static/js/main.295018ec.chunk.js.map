{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","props","className","classes","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isFormFocused","setisFormFocused","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuotes","myQuote","NewCommentForm","usehttp","commentTextRef","onaddedComment","submitFormHandler","quoteid","quoteID","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","loadedComments","useParams","addedCommentHandler","HighlightedQuote","QuoteDetails","path","exact","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.295018ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2se-8\",\"loading\":\"QuoteForm_loading__TncqD\",\"control\":\"QuoteForm_control__2wJ_X\",\"actions\":\"QuoteForm_actions__27m9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2ztCv\",\"logo\":\"MainNavigation_logo__i1pA7\",\"nav\":\"MainNavigation_nav__3WErU\",\"active\":\"MainNavigation_active__2oWp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1HvcC\",\"loading\":\"NewCommentForm_loading__2pWfV\",\"control\":\"NewCommentForm_control__15Gxi\",\"actions\":\"NewCommentForm_actions__YGtR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3DdAO\",\"sorting\":\"QuoteList_sorting__Z5OON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__OqXGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1KMyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__Kfavi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__10ZVJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__12rvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1lbSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__38k0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__10fOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__26-zv\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","// const FIREBASE_DOMAIN = 'https://react-hhtp-e14bf-default-rtdb.firebaseio.com';\nconst FIREBASE_DOMAIN = 'https://quotes-website-6cdfc-default-rtdb.firebaseio.com';\n\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n  const queyParams = new URLSearchParams(location.search)\n  const isSortAscending = queyParams.get('sort') === 'asc'\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const sortedQuotes = sortQuotes(props.quotes,isSortAscending)\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortAscending ? 'desc' : 'asc'))\n  }\n\n  return (\n    <Fragment>\n\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>Add a Quote </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react'\nimport useHttp from '../hooks/use-http'\nimport { getAllQuotes } from '../lib/api'\nimport QuoteList from '../components/quotes/QuoteList'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\n\nconst AllQuotes = () => {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\n\n\n    useEffect(() => {\n        sendRequest()\n    }, [sendRequest])\n\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if (error) {\n        return (\n            <div className='centered focused'><p>Error in fetching quotes</p></div>\n        )\n    }\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n        return <NoQuotesFound />\n    }\n\n\n    return (\n        <QuoteList quotes={loadedQuotes} />\n    )\n}\n\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isFormFocused, setisFormFocused] = useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const focusHandler = () => {\n    setisFormFocused(true)\n  }\n\n  const finishDataEnteringHandler = () => {\n    setisFormFocused(false)\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isFormFocused}\n        message={(location) => 'Are you sure you want to leave ? Entered data will be lost'}\n      />\n      <Card>\n        <form\n          onFocus={focusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishDataEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport QuoteForm from '../components/quotes/QuoteForm'\nimport useHttp from '../hooks/use-http'\nimport { addQuote } from '../lib/api.js'\n\nconst NewQuotes = () => {\n    const { sendRequest, status } = useHttp(addQuote);\n    const history = useHistory()\n\n    useEffect(() => {\n        if (status === 'completed') {\n            history.push('/quotes')\n        }\n    }, [status, history])\n\n\n    const addNewQuoteHandler = (myQuote) => {\n        sendRequest(myQuote)\n    } \n\n    return (\n        <QuoteForm onAddQuote={addNewQuoteHandler} isLoading={status === 'pending'} />\n    )\n}\n\nexport default NewQuotes;","import { useEffect, useRef } from 'react';\nimport usehttp from '../../hooks/use-http'\nimport { addComment } from '../../lib/api'\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner'\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = usehttp(addComment);\n  const commentTextRef = useRef();\n  const { onaddedComment } = props;\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteid: props.quoteID })\n  };\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onaddedComment()\n    }\n\n  }, [status, error, onaddedComment])\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' &&\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from '../comments/CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments)\n  const params = useParams()\n  const { quoteid } = params;\n\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteid)\n  }, [quoteid, sendRequest])\n\n  useEffect(() => {\n    sendRequest(quoteid)\n  }, [quoteid, sendRequest])\n\n  let comments;\n  \n  if (status === 'pending') {\n    comments = <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length < 0)) {\n    comments = <div className='centerd'>\n      <p>No comments added yet</p>\n    </div>\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteID={quoteid} onaddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from '../lib/api'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\n\nconst QuoteDetails = () => {\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n    const params = useParams()\n    const { quoteid } = params;\n    \n    useEffect(() => {\n        sendRequest(quoteid)\n    }, [sendRequest, quoteid])\n\n\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if (error) {\n        return (\n            <div className='centered focused'><p>Error in fetching quotes</p></div>\n        )\n    }\n\n    if (!loadedQuote.text) {\n        return <NoQuotesFound />\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n            <Route path={`/quotes/${quoteid}`} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`/quotes/${quoteid}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`/quotes/${quoteid}/comments`}>\n                <Comments />\n            </Route>\n\n        </Fragment>\n\n    )\n}\n\nexport default QuoteDetails;","import { NavLink } from 'react-router-dom'\nimport classes from './MainNavigation.module.css'\n\nconst MainNavigation = () => {\n    return (\n        <header className={classes.header}>\n            <div className={classes.logo}>Great Quotes</div>\n            <nav className={classes.nav}>\n                <ul>\n                    <li>\n                        <NavLink to='/quotes' activeClassName={classes.active}>\n                            All Quotes\n                        </NavLink>\n                    </li>\n\n                    <li>\n                        <NavLink to='/new-quote' activeClassName={classes.active}>\n                            Add a quote\n                        </NavLink>\n                    </li>\n                </ul>\n\n\n\n\n            </nav>\n        </header>\n    )\n}\n\n\nexport default MainNavigation;","import { Fragment } from 'react'\nimport classes from './Layout.module.css'\nimport MainNavigation from './MainNavigation'\n\nconst Layout = props => {\n    return (\n        <Fragment>\n            <MainNavigation />\n            <main className={classes.main}>{props.children}</main>\n        </Fragment>\n    )\n}\n\nexport default Layout;\n","const NotFound = () => {\n    return(\n        <div className='centered'>\n            Page not found\n        </div>\n    )\n}\n\nexport default NotFound;","import { Route, Switch, Redirect } from 'react-router-dom';\nimport AllQuotes from './pages/AllQuotes';\nimport NewQuotes from './pages/NewQuotes';\nimport QuoteDetails from './pages/QuoteDetails';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n\n\n        <Route path='/quotes' exact>\n          <AllQuotes />\n        </Route>\n\n        <Route path='/new-quote'>\n          <NewQuotes />\n        </Route>\n\n        <Route path='/quotes/:quoteid'>\n          <QuoteDetails />\n        </Route>\n\n\n        <Route path='*'>\n          <NotFound />\n        </Route>\n\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}